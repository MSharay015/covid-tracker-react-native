fastlane_version "2.160.0"

# this is needed just for CI, you don't need it localy
@keychain_name = "zoe-covid.ios.keychain.tmp"
@keychain_password = "TmpPassword"

@ios_build_id = "com.joinzoe.covid-zoe"

default_platform(:ios)

def get_version_no
  @buildNumber = ENV['BUILD_BUILDNUMBER'] || "1"

  @packageVersion = `node -e "console.log(require('../package.json').version);"`.strip!

  if @buildNumber == "1"
    @environment = "local"
  else
    @environment = ENV['NAME']  
  end

  #Only update the build number if its not already been updated
  if @buildNumber.include? "."
    @version = ENV['BUILD_BUILDNUMBER']
  else
    @version = "#{@packageVersion}.#{@buildNumber}-#{@environment}"
  end
  
  puts "Build Number is #{@buildNumber}"
  puts "Environment is #{@environment}"
  puts "Version is #{@version}"
end

def build_tmp_keychain
  create_keychain(
      name: @keychain_name,
      password: @keychain_password,
      default_keychain: true,
      unlock: true,
      timeout: false
  )
end

platform :android do 
  desc "Build Android app"
  lane :release do |options|

    get_version_no

    case ENV["NAME"]
    when "staging"
        build_type = "Release"
    else
        build_type = "Release"
    end

    print build_type

    android_set_version_name(
      version_name: @version,
      gradle_file: "./android/app/build.gradle"
    )

    android_set_version_code(
      version_code: "#{@buildNumber}",
      gradle_file: "./android/app/build.gradle"
    )

    gradle(
      task: "assemble",
      build_type: build_type,
      project_dir: "./android"   
    )
  end

  # this is a seperate lane so the build pipeline can use its own secure storage & signing step
  lane :publish do |options|

    track = 'beta'
    
    if options[:track]
      track = options[:track]
    end

    puts 'Playstore submission track is:' + track

    @changeLog = changelog_from_git_commits(pretty: '• %s', merge_commit_filtering: 'exclude_merges', commits_count: 30)
    puts @changeLog

    if options[:submit]
      upload_to_play_store(track: track)
    end

    if options[:appcenter]

      # production = covid_symptom_tracker_android 
      # Staging = covid_symptom_tracker_android_stage
      app_name = ENV["APPCENTER_ANDROID_NAME"]

      path = "android/app/build/outputs/apk/release/app-release.apk"

      # distribution group
     appDistGroup = ENV["APPCENTER_ANDROID_DIST_GROUP"]

      appcenter_upload(
        app_name: ENV['APPCENTER_ANDROID_NAME'],
        api_token: "7282fd83b69045a31849401945b6b365bcb48891",
        destinations: "Team_Zoe_android",
        destination_type: "group",
        file: path,
        owner_name: "Joinzoe",
        owner_type: "organization",
        notify_testers: true,
        release_notes: @changeLog
      )
    end
  end

end

platform :ios do
  before_all do
    if ENV['CI_MODE'] == 'true'
      # this is needed just for CI, you don't need it localy
      build_tmp_keychain
    end

    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
  end

  lane :certificates do
    match(app_identifier: ["com.joinzoe.covid-zoe"])
  end

  desc "Build"
  lane :release do |options|

    get_version_no
    get_certificates           # invokes cert
    get_provisioning_profile   # invokes sigh

    increment_build_number(
      xcodeproj: "./ios/Covid.xcodeproj",
      build_number: "#{@buildNumber}"
    )

    # project = Xcodeproj::Project.open("../ios/Covid.xcodeproj")
    # project.targets.each do |target|
    #   target.build_configurations.each do |config|
    #     config.build_settings['CODE_SIGN_STYLE'] = "Manual"
    #   end
    # end
    # project.save

    @changeLog = changelog_from_git_commits(pretty: '• %s', merge_commit_filtering: 'exclude_merges', commits_count: 30)
    puts @changeLog

    # update_code_signing_settings(
    #   use_automatic_signing: true,
    #   path: "./ios/Covid.xcodeproj"
    # )

    if options[:adhoc]
      adhoc = true

      match(
        type: "adhoc",
        app_identifier: @ios_build_id,
        git_branch: "master",
        readonly: true,
        verbose: true,
        # keychain_name: keychain_name, # you can remove this and bottom parameter on your local machine
        # keychain_password: keychain_password
      )

    else 
      adhoc = false
    end

    gym(
      clean: true, 
      configuration: “Release”, 
      export_method: “ad-hoc”,
      scheme: ENV['FASTLANE_SCHEME'],
      output_directory: "./build",
      workspace: "./ios/Covid.xcworkspace"
    )

    if options[:appcenter]
      appcenter_upload(
        app_name: ENV['APPCENTER_IOS_NAME'],
        api_token: "7282fd83b69045a31849401945b6b365bcb48891",
        destinations: "adhoc",
        destination_type: "group",
        owner_name: "Joinzoe",
        owner_type: "organization",
        ipa: "build/covid-zoe.ipa",
        notify_testers: true,
        release_notes: @changeLog
      )
    end

  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    # slack(
    #   message: exception.message,
    #   success: false
    # )
  end
end
